{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUXILIAR DESKTOP\\\\front 1\\\\front III\\\\entregable-frontend-3-junio22\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport app from \"../App\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Item(props) {\n  _s();\n\n  const nombre = props.nombre;\n  const descripcion = props.descripcion;\n  const stock = props.stock;\n\n  function comprobarStock(cant) {\n    props.updateHedder();\n\n    if (cant <= 0) {\n      return \"sin stock\";\n      changeStateButton(\"disabled\");\n    } else {\n      return parseInt(cant) - 1;\n    }\n  }\n\n  const [stockState, setStockState] = useState(stock);\n  const [buttonState, changeStateButton] = useState(\"enable\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [nombre, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", descripcion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\" en stock \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: stockState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: buttonState,\n      onClick: () => setStockState(comprobarStock(stockState)),\n      children: \"comprar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"/pCLbP81Pbf3+2kRd6VztrKYG3g=\");\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["app","React","useState","Item","props","nombre","descripcion","stock","comprobarStock","cant","updateHedder","changeStateButton","parseInt","stockState","setStockState","buttonState"],"sources":["D:/AUXILIAR DESKTOP/front 1/front III/entregable-frontend-3-junio22/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\nimport app from \"../App\";\r\nimport React from \"react\";\r\nimport {useState} from \"react\";\r\n\r\nfunction Item(props){\r\n\r\n  const nombre=props.nombre\r\n  const descripcion=props.descripcion\r\n  const stock=props.stock\r\n\r\n  function comprobarStock(cant){\r\n    props.updateHedder()\r\n    if (cant<=0){\r\n      return (\"sin stock\")\r\n      changeStateButton(\"disabled\")\r\n    } else { return (parseInt(cant)-1)}\r\n  }\r\n\r\n  const [stockState,setStockState]= useState(stock);\r\n  const [buttonState,changeStateButton]=useState(\"enable\")\r\n\r\n  return (\r\n    <div className='producto'>\r\n      {<h3>{nombre} </h3>}\r\n      {<p> {descripcion}</p>}\r\n      {<h5> en stock <span>{stockState}</span> </h5>}\r\n        {<button disabled={buttonState} onClick={()=>setStockState(comprobarStock(stockState))}>comprar</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Item;"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;EAAA;;EAElB,MAAMC,MAAM,GAACD,KAAK,CAACC,MAAnB;EACA,MAAMC,WAAW,GAACF,KAAK,CAACE,WAAxB;EACA,MAAMC,KAAK,GAACH,KAAK,CAACG,KAAlB;;EAEA,SAASC,cAAT,CAAwBC,IAAxB,EAA6B;IAC3BL,KAAK,CAACM,YAAN;;IACA,IAAID,IAAI,IAAE,CAAV,EAAY;MACV,OAAQ,WAAR;MACAE,iBAAiB,CAAC,UAAD,CAAjB;IACD,CAHD,MAGO;MAAE,OAAQC,QAAQ,CAACH,IAAD,CAAR,GAAe,CAAvB;IAA0B;EACpC;;EAED,MAAM,CAACI,UAAD,EAAYC,aAAZ,IAA4BZ,QAAQ,CAACK,KAAD,CAA1C;EACA,MAAM,CAACQ,WAAD,EAAaJ,iBAAb,IAAgCT,QAAQ,CAAC,QAAD,CAA9C;EAEA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACG;MAAA,WAAKG,MAAL;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,eAEG;MAAA,gBAAKC,WAAL;IAAA;MAAA;MAAA;MAAA;IAAA,QAFH,eAGG;MAAA,sCAAc;QAAA,UAAOO;MAAP;QAAA;QAAA;QAAA;MAAA,QAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QAHH,eAIK;MAAQ,QAAQ,EAAEE,WAAlB;MAA+B,OAAO,EAAE,MAAID,aAAa,CAACN,cAAc,CAACK,UAAD,CAAf,CAAzD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJL;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAzBQV,I;;KAAAA,I;AA6BT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}