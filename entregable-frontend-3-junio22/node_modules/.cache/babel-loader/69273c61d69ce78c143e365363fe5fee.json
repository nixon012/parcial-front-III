{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUXILIAR DESKTOP\\\\front 1\\\\front III\\\\entregable-frontend-3-junio22\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport app from \"../App\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Item(nombre, descripcion, stock) {\n  _s();\n\n  const [stockF, setStockF] = useState(stock);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [nombre, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", descripcion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\" en stock \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: comprobarStock(parseInt(stock))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 22\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setStockF(stockF + 1),\n      children: \"comprar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"kCzieHOhgKkNAdSblO1huR0808U=\");\n\n_c = Item;\n\nfunction comprobarStock(cant) {\n  if (cant <= 0) {\n    return \"sin stock\";\n  } else {\n    return cant;\n  }\n}\n\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["app","React","useState","Item","nombre","descripcion","stock","stockF","setStockF","comprobarStock","parseInt","cant"],"sources":["D:/AUXILIAR DESKTOP/front 1/front III/entregable-frontend-3-junio22/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\nimport app from \"../App\";\r\nimport React from \"react\";\r\nimport {useState} from \"react\";\r\n\r\nfunction Item(nombre,descripcion,stock){\r\n\r\n  const [stockF,setStockF]= useState(stock);\r\n\r\n  return (\r\n    <div className='producto'>\r\n       {<h3>{nombre} </h3>}\r\n      {<p> {descripcion}</p>}\r\n      {<h5> en stock <span>{comprobarStock(parseInt(stock))}</span> </h5>}\r\n      {<button onClick={()=>setStockF(stockF+1)}>comprar</button>}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction comprobarStock(cant){\r\n  if (cant<=0){\r\n    return (\"sin stock\")\r\n  } else { return (cant)}\r\n}\r\n\r\nexport default Item;"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,IAAT,CAAcC,MAAd,EAAqBC,WAArB,EAAiCC,KAAjC,EAAuC;EAAA;;EAErC,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAoBN,QAAQ,CAACI,KAAD,CAAlC;EAEA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACI;MAAA,WAAKF,MAAL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEG;MAAA,gBAAKC,WAAL;IAAA;MAAA;MAAA;MAAA;IAAA,QAFH,eAGG;MAAA,sCAAc;QAAA,UAAOI,cAAc,CAACC,QAAQ,CAACJ,KAAD,CAAT;MAArB;QAAA;QAAA;QAAA;MAAA,QAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QAHH,eAIG;MAAQ,OAAO,EAAE,MAAIE,SAAS,CAACD,MAAM,GAAC,CAAR,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAZQJ,I;;KAAAA,I;;AAcT,SAASM,cAAT,CAAwBE,IAAxB,EAA6B;EAC3B,IAAIA,IAAI,IAAE,CAAV,EAAY;IACV,OAAQ,WAAR;EACD,CAFD,MAEO;IAAE,OAAQA,IAAR;EAAc;AACxB;;AAED,eAAeR,IAAf"},"metadata":{},"sourceType":"module"}